; ------------------------------------------------------------------------------
; Organizer
; ------------------------------------------------------------------------------
; The template for organizers, the accounts who can create elections.
; ------------------------------------------------------------------------------
(def 'organizer () {

    ; init
    (include "./env.def")
    (include "./defs/single.def")
    (include "./defs/stdll.def")
    
    ; --------------------------------------------------------------------------
    ; macros (UPPER_CASE)
    ; --------------------------------------------------------------------------
    ; macros for constants
    (def 'CREATED_TIME (TIMESTAMP))
    (def 'OWNER (ORIGIN))
    (def 'MANAGER (CALLER))    ; would be the AccountManager
    
    ; macros for parameters
    (def 'CMD () (calldataload 0x0))
    (def 'ELECTION_ADDRESS (calldataload 0x20))

    ; --------------------------------------------------------------------------
    ; variables (lower_case)
    ; --------------------------------------------------------------------------
    ; ll for all the elections created by the organizer
    (llInit "elections" "none" "none" "none")

    (return 0 (lll {
        [[0xcccc]](GASS)    ; ??????????????????????????????????????????????????

        ; body
        ; ----------------------------------------------------------------------
        ; Register an election. (called by the owner)
        ; ----------------------------------------------------------------------
        ; Calldata: "registerElection" ELECTION_ADDRESS
        ; Returns: 0 - fail | 1 - success
        ; ----------------------------------------------------------------------
        (when (= (CMD) "registerElection") {
            ; check if the caller is the owner
            (unless (= (CALLER) OWNER) (STOP))
            
            ; check if the election is created by this organizer
            [0x0]"checkOrganizer"
            (CALL (GASS) (ELECTION_ADDRESS) 0 0x0 0x20 0x20 0x20)
            (when (= @0x20 0) (STOP))
            
            (llAddLink "elections" (ELECTION_ADDRESS) 1)
            
            [0x0]1
            (return 0x0 0x20)
        })
    })
})